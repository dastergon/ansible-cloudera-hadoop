- name: install namenode package
  tags: package
  apt:  name=hadoop-hdfs-namenode state=latest

- name: install namenode default configurations
  template: src=default/{{ item }}.j2 dest=/etc/default/{{ item }}
  with_items:
    - hadoop-hdfs-namenode

- name: destroy data
  tags: init
  command: rm -rf {{ item }}
  with_items: "{{ dfs_namenode_name_dir.replace('file://','').split(',') }}"
  when: destroy_data

- name: create namenode directories
  tags: init
  file: dest={{ item }} owner=hdfs group=hdfs state=directory
  with_items: "{{ dfs_namenode_name_dir.replace('file://','').split(',') }}"

- name: format primary namenode
  tags: init
  command: sudo -Hu hdfs hdfs namenode -format -force
  when: ansible_hostname == groups['namenodes'][0] and destroy_data

- name: start primary namenode
  tags: service
  service: name=hadoop-hdfs-namenode state=restarted enabled=yes
  when: ansible_hostname == groups['namenodes'][0]

- name: init secondary instance
  tags: init
  command: sudo -Hu hdfs hdfs namenode -bootstrapStandby
  when: ansible_hostname != groups['namenodes'][0] and destroy_data

- name: start secondary namenode
  tags: service
  service: name=hadoop-hdfs-namenode state=restarted enabled=yes
  retries: 3
  when: ansible_hostname != groups['namenodes'][0]

- name: install zkfc package
  tags: package
  apt:  name=hadoop-hdfs-zkfc state=latest
  when:  groups['namenodes']|count > 1

- name: install zkfc default configurations
  tags: config
  template: src=default/{{ item }}.j2 dest=/etc/default/{{ item }}
  with_items:
    - hadoop-hdfs-zkfc
  when:  groups['namenodes']|count > 1

- name: initialize zookeeper
  tags: init
  command: sudo -Hu hdfs hdfs zkfc -formatZK -force
  when:  groups['namenodes']|count > 1
  run_once: true

- name: start zkfc
  tags: service
  service: name=hadoop-hdfs-zkfc state=restarted enabled=yes
  retries: 3
  when:  groups['namenodes']|count > 1
